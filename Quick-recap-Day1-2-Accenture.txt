Quick recap 

- Introduction part
   - Linux vs Enterprise Linux 
   - What is OS and why used (OS types - Client, Server)
   - Server (RHEL - Red Hat Enterprise Linux Server - RHEL 8).
   - As of now (RHEL6/7/8 -in production)
     NOte: RHEL6 as of now under extended support.

- Basic commands and utilities 
   - Basic commands.
      whoami, pwd, ls, which, cd , cd .. (cd ../..), cd - , mkdir, rm, rmdir, tree, 
   - Concepts of commands 
     "COmmand Options Argument" 
	  cp -r dir1 dir2 
	  command - It's utility to perform any action.
	   NOte: Every command having manual pages and help option.
	   man command_name (man 1 command_type_1 or man 8 command_type_2)
	   command_type_1 - /bin or /usr/bin 
	   command_type_2 - /sbin or /usr/sbin 
	   
	   command --help 
	   
	   Option - Which modify the behaviour of the command.
	    NOte: All option details can be get via manual pages.
		
	   Argument - Data required to execuite coammnds.
	   NOte: All option details can be get via manual pages.
	   
	- Read Manual pages 
	   man 1 cp or man 8 useradd or man 5 shadow 
	   
	   /string  (this is for search for given string).
	   TYpe "n" for next search 
	   Type "N" for Previous seach 
	   Type "G" to reach to last line of the page.
	   Type "g" to reach the top line of the manual page.
	   Type "q" for quit 
	   
	 - Directory and file creations(operations onf it).
	  - mkdir  - TO create dir  
	  - touch  - To create emply file 
	  - vim    - Editor to create file with some contents.
	    vim file_name 
		PRESS key "i" - Insert mode (ONly in insert mode you can write/update the file).
		Type your contents 
		Again type your contents 
		...
		...
		Press "Ese" key to lock the screen (it's lock mode).
		Press ":wq"   - Recommended one
		Press ":wq!"  - This is forcefully saved and closed.
	   
	   - cat - to see the contents of file 
	   - grep - to get the perticular line (as per given string).
Take   - tail, head,wc, STDIO, STDIN, STERR, redirector (>, >>, 2> or &> and |). 


      - Absolute abd relative path 
	  - Linux hierarchy tree (default directories "/"). 
	  - vimtutor 
      
- User management 
       - Users
       - Type of users (Admin user - root, Normal user - john, user1, system user).
       - Groups 
       - Type of groups (Primary Group, 2ndry Group).
	     NOte: 
		  Primary group info (/etc/passwd)
		  2ndry group info  - /etc/group 
		  
	   - Password (/etc/shadow)
	   - HOme directory & mail dir 
	       HOme dir  - /home/user_name 
		   Mail file - /var/spool/mail/username 
		   
	   - commands (user management commands).
	      - useradd 
		  - userdel 
		  - usermod 
		  - groupadd
		  - groupmod 
		  - groupdel 
		  - passwd (echo redhat | passwd --stdin user_name).
		  - chmod (chmod 755 file/dir - 7 means = read(4)+write(2)+execute(1), 7 for owner, next 5 for groupowner, last 5 for other).
		  - chown ( chown user:groupowner file/dir , chmod root:unixadm /ORG, only root can change the ownership).
		    ownership can be group or direct owner.
	      - umask  - It provide default directories/files permission.
          - chage 
		  
		  
       - Important files w.r.t User management.
        /etc/passwd   (7 fields, each are seprated by ":")
   		/etc/group    (4 fields)
		/etc/shadow   (9 fields)
		/etc/login.def (This file refered when we execute user management commands. 
       
	    Note: To know more about above files, please use manual 5th page eg: (man 5 passwd).
		
	   - SUID, SGID, StickyBit 
	   - SUID explained - When SUID setup on any executable file then as per the permission and ownership (explained below).
	      a) When SUID setup on any executable file.
		      - HOw to set SUID - chmod 4<default-premission-continue> file_name 
			    Example: ls -l /usr/bin/passwd 
				
				-rwxr-xr-x   root root <SOME-info> /usr/bin/passwd 
				
				Owner - root 
				Group-Owner - root 
				
				  default-premission on this file is - 755 (owner permission=r+w+x, group=r+x, other=r+x)
                 It mean anyone can execute this file (/usr/bin/passwd)
				 
				 chmod 4755 /usr/bin/passwd
			  - SUID mean - when anyone execute mentioned file (/usr/bin/passwd) then it will execute as owner of this file.
			     Everyone execuite mentioned file as root user.
			  
		   b) What "/usr/bin/passwd" file will do ?
			    It change the password and update in "/etc/shadow" file.
				Even we don't have permission on "/etc/shadow - 000 ) but after that also any user able to update password to this file using "/usr/bin/passwd").
			  
        - SGID explained - When SGID setup on any executable dir then as per the permission and ownership (explained below).
	      a) When SGID setup on any directory.
		      HOw to set SGID - chmod 2<default-premission-continue> file_name 
			    Example: ls -l /ORG 
				
				drwxrwx---  root unixadm <SOME-info> /ORG  
				
				Owner - root 
				Group-Owner - unixadm 
				
				  default-premission on this file is - 770 (owner permission=r+w+x, group=r+w+x, other=---)
                 It mean only root and users belongs to "unixadm" group can access "/ORG" - Normal permission (770)
				 
				 chmod 2770 /ORG 
				 ls -ld /ORG 
				 drwxrws---  root unixadm /ORG 
				 
				 When SUID setup on "/ORG" directory.
				 Now if any file or directory created under "/ORG", it will automatically get same group ownership what you can set on "/ORG" 
				 
				 
				 
 		- StickyBit:-
		    It mean when stickybit setup then no one can delete the files/dir of others (even having full permission).
			- ONly root and owner of the file/dir can delete the file.
			
			 chmod 1777 /tmp_my 
			 ls -ld /tmp_my 
			 drwxrwxrwt   root root /tmp_my 
			
=================================================================================================================
Q1 ) Create file with below line

 This is my 1st day 
 This is my 2nd day 
 continue till 10th day 
 
Q2 ) Reeplac "This" to "THIS"

Q3) Copy 17-23 line from file (/etc/passwd) to file_q3.txt using redirectors (>,tail, head ).

Q4) output of  file "file_q3.txt" to file5.txt (all output in upper case).

==============================================
Soft Link:-

mkdir work 
cd work 
pwd
cp -r /etc/passwd .
ls -l
mkdir data 
mv passwd data/
tree 
ln -s data/passwd sl_passwd
ls -l 
     sl_passwd --> data/passwd 


So anythings on any file (sl_passwd or data/passwd), both file have same contents all the time.

rm -rf data/passwd 


Then your soft link will be called dead link.


With softlink - Both file have different Inode Number.

ls -li /file_name - absolute path.

--------
Hard link 
ln source hardlink 
ln /data_source link

===================
mkdir work 
compress "/etc" folger -tar, bunZup, gunzip 
 and verify it


- Specific name of file (Login as root)
  find / -name passwd 
  
- File which is having ownership u1 and group ownership "unixteam"
==========================
Process Management:- 
 What is process ?  - Program under execution called process.
  
  Execute the program, it become process.
 What is program ?
   "Set of instructions" why to perform some task.
   
   /bin or /usr/bin    - Program not required root access 
   /sbin or /usr/sbin  - Programs required root previlege 

  commands are programs please in (/sbin or /bin - /usr/bin or /usr/sbin).
  All programs under above dir having executable permission (other having executable access).
  
  Program under execution become process and evry process having major components.
  PID - Process ID 
  PPID - Parent Process ID.
  UID or one or more GID.    (Every PID associated with one UID)
  UID = User ID 
  GID = Group ID 

  ps -aef     - All process 
  ps -eo pcpu,pid,ppid,stat,comm | head -1 ; ps -eo pcpu,pid,ppid,stat,comm |sort -nr | head -5
  ps -eo pcpu,pid,ppid,stat,comm | head -1 ; ps -eo pcpu,pid,ppid,stat,comm |sort -nr | head -10
  
  ps -eo pmem,pid,ppid,stat,comm | head -1 ; ps -eo pmem,pid,ppid,stat,comm |sort -nr | head -5
  ps -eo pmem,pid,ppid,stat,comm | head -1 ; ps -eo pmem,pid,ppid,stat,comm |sort -nr | head -10
  
  
=============== 
Process Priority 
nice 
renice 

Minimum the number max the priority.
-20 to +19 

reset the process priority 
renice -n -19 -p PID 34567

nice -n -19 ./script.sh

 kill -l 
 kill -19 PID 
 
 
 =========================================
 Package Management:-
 
 package or software - 
 
 When install package/software then only we can use the service 
 
 RPM  - rpm file must be available (locally)
 YUM  - Repo needed 
 
 Steps to configure YUM.
 
 1) df -THP  (RHEL8.2 ISO mounted on this system - iso9960).
   MOunted on /run/media/rsp/RHEL8.2-BaseOS 
   
    # df -THP 
   
 2) mkdir -p /var/www/html/repo
    Note: Creating this folder to copy all the DVD/ISO contents to "/var/www/html/repo"
	
	
	# mkdir -p /var/www/html/repo
	
 3) Now access packages location and copy all contents 
    
	# cd /run/media/rsp/<Press-TAB>
	# pwd
	# ls 
	# cp -rv * /var/www/html/repo/
	
	Below steps for verification.
	
	# ls -l /var/www/html/repo/BaseOS 
	# ls -l /var/www/html/repo/AppStream 
	
	NOte: Once copy complated then
	
 4) Create local repos 1st 
 
  # cd /etc/yum.repos.d/

	vim local.repo 
	[local_repo_BaseOS]
	name= Local RHEL8.2 repo 
	baseurl = file:///var/www/html/repo/BaseOS 
	gpgcheck = 0 
	enabled = 1
	
   [local_repo_AppStream]
	name= Local RHEL8.2 repo 
	baseurl = file:///var/www/html/repo/AppStream
	gpgcheck = 0 
	enabled = 1
	
	:wq

    NOte: Do ls (/etc/yum.repos.d/) only see local.repo file (rest all move to /tmp)
    Eg: redhat.repo , mv redhat.repo /tmp )	
	
5) yum clean all ; yum repolist 

6) yum install httpd 

7) systemctl start httpd	
	
 
 =================================================
  Job scheduling 
  Crontab - 
 
  systemctl 
  
 - install apache   ( # yum install httpd)
 - Start apache     ( # systemctl start httpd)
 - Enable apache    ( # systemctl enable httpd 
 - Configure apache ( # vim /etc/httpd/conf.d/anyfile_name.conf or defult config file - /etc/httpd/conf/httpd.conf ) 
 - Deploy application on apache  (
 
 apache = httpd 
 
  As per apache service.
   Apache package name = httpd 
   Apache service name = httpd or httpd.service 
   APache config file /etc/httpd/conf.d/anyfile_name.conf or defult config file - /etc/httpd/conf/httpd.conf ) 
   
 
 
   Crontab - 
   Crontab package = crontabs (# yum install crontabs)
   Service = crond  or crond.service 
   Configuration - /etc/crontabs 
   =============
   Verify the crontab package (installed or not) 
    - # yum info crontabs or rpm -qa | grep crontabs 
	
   Verify the crontab service running or not 
     # systemctl status crond 
	 
	  status/start/restart/stop 
	  
	  
	  
	  Setup jobs as per below.
	  
	  1) Every 12:15 mins i want to run jobs (some script).
	  
	    15 12 * * * echo "This is my command"
		
	 2) Every 12:15 time only 15th day of the month
        15 12 15 * * 	echo "This is my command"

     3) Every 12:15 time only 15/19/23/26 day of the month

        15 12 	15,19,23,26 * *  echo "This is my command"
		
	 4) Every 12:15 time only 15/19/23/26 day of the month, in the month of march/July/Oct 
	    15 12 	15,19,23,26 03,07,10 *  echo "This is my command"
		
		
     5) Every 12 to 15 time only 15-19/23/26 day of the month, in the month of march to july and Sept to Nov 
		
	    * 12-15 15-19,23,26   03-07,09-11  * echo "This is my command"
		
	6)  Every 12 to 15 time by Tues-Fri, in the month of march to july 
	      * 12-15 * 03-07 02-05 echo "This is my command"
		  
	7) Every 10 mins from 12 to 15 time only 15-19/23/26 day of the month, in the month of march to july and Sept to Nov	  
	  
	  
	  */10 12-15 * 03-07 02-05 echo "This is my command"
	  
	   12:10 
	   12:20
	   12:30
	   12:40
	   12:50
	   01:00
	   01:10
	   ..
	   ..
	   14:50
	   15:00 
    
	# crontab -u user -e 
	# crontab -u root -l 
 
 ===================================
 Setup hostname and IP address 
  1) Login as root 
    $ pwd
	 rps user 
    $ su - 
	 passwd: rps@12345
    # whoami 
	root 
	# cat /etc/hostname 
	localhost 
	# hostnamectl set-hostname server-01.lab.example.com 
	# hostname 
	server-01.lab.example.com 
	Note: hostnamectl add hostname entry permanently to "/etc/hostname" 
	
	# reboot 
	NOte: Make sure your passwd 
	# passwd rps 
	rps@12345
	# passwd root
	rps@12345
	# reboot (Want to make sure after reboot, hostname presist)
=
 Setup Static IP and Dynamic IP:- 
  What is IP address ?
   32 bits logical address (dot decimal format)
    1-127     - Class A IP range 
	128-191   - Class B 
	192-223    - Class C
	======================
	224-239    - Class D  
	240-255    - Class E 
  
  # ifconfig (But this interface almost decomm - it's recommeneded to use ip command)
  # ip add show 
  
  Static IP - IP address setup Manually (specific IP set)
  Dynamic IP - (IP address provided by DHCP)
  
  
  Setup the ip Address 
  Current IP address - 172.20.0.152/24  (CIDR is 24 (8+8+8+0) = 255.255.255.0)
   
   172.20.0.152/24
    172.20.0.0    - Network Address (Can not be assigned to any host).
	172.20.0.1    - 1st IP aggress
	172.20.0.2    - 2nd IP address 
	..
	..
	..
	172.20.0.254  - Last IP address 
	172.20.0.255  - BC address  (Can not be assigned to any host).
	
    No of hosts: 2^8 -2 = 256 - 2 
	            = 254 
  
  New IP need to setup. 
  IP address  : 172.20.0.152
  Subnet Mask : 24 
  Gateway     : 172.20.0.1 
  DNS or nameserver - 172.20.0.1
  
  1) Show your system connection 
    nmcli connection show  (use lab here )
	nmcli device show 
	
  2) Setup new connection 
   nmcli connection add con-name accenture-network01 autoconnect yes ifname ens32 type ethernet 
   nmcli connection show 
   
  3) Connection modified.

   nmcli connection modify accentrure-network01 ipv4.address 172.20.0.152/24 ipv4.gateway 172.20.0.1 ipv4.dns 172.20.0.1 ipv4.dns-search lab.example.com method none 

  4) Connection reload
    nmcli connection reload accentrure-network01
	
  5) Backend work 
    cat /etc/sysconfig/scripts-network/ifcfg-accenture-network01 
	
	If static not working (update in the file "ifcfg-accenture-network01")
	DHCP=none 
	
	reboot your machine once (reboot actually not required as per production, but we are trying to make it).
	
	
	nmcli connection add con-name accenture-network-dhcp ifname eth0 autoconnect yes 
	nmcli connection modify accenture-network-dhcp method auto 
	nmcli connect up accenture-network-dhcp
	nmcli connect reload accenture-network-dhcp
	nmcli connection show 
	
	
	
	As per Production
	Multiple Domain:-
     example.com	
	ELlab.example.com
	k8lab.example.com
	
	
	
	
	=================
	Web application - 
	
	http://localhost 
	
	
	vim /etc/hosts  (local name resolution file)
	
	
	
	firewall-cmd --permanent --add-service=http 
	firewall-cmd --reload 
	
	firewall-cmd --permanent --add-service=https
	firewall-cmd --reload 
	
	firewall-cmd --permanent --add-service=dhcp
	firewall-cmd --reload 
	
	firewall-cmd --permanent --add-port=80/tcp 
	firewall-cmd --reload 

	firewall-cmd --permanent --add-port=80/udp 
	firewall-cmd --reload 
	
	
	firewall-cmd --list-all 
	
	cat /etc/firewalld/zones/public.xml 

=============================================
 user1-5   (unix)
 user6-10  (middleware)
 user11-15 (app1)
 
 user51 to 60 (not belongs to above groups).
 
 Set ACL under /ORG
  
  getfacl /ORG/APP1
  setfacl -m u:user1:rwx /ORG/APP1
  setfacl -m g:goupname:rwx /ORG/UNIX 
  
  ========================
  Selinux (Security Enhanced Linux (SELinux):-
  Security policies with respect to 
    - contests (SELinux permission over file/dir)
	
	Owner,GroupOwner,other, w.r.t (contest of the file/dir - Additional permission on file/dir 
	
	
	- Booleans (SELinux w.r.t to booleands)
	    http_nfs_service --> off 
		https service can not be use with NFS service.
	  
	
  ls -ld /etc/sysconfig/selinux or /etc/sysconfig/selinux 
  
    Enfocring   - All SELinux policies loaded in the server.
	premissiove - Policies not loaded only wornings 
	disabled    - NO policies loaded 
  

   # getenforce 
   Enfocring
   # setenforce 0  (premission)
   # setenforce 1  (Enfocring)
   # /etc/httpd/conf.d/any_file_name.conf 
   
   
Step 1) 
Custom apache file - copy below contents.

 # vim /etc/httpd/conf.d/anyfile.conf 
 
<VirtualHost *:81>
 ServerAdmin webmaster@server-01.lab.example.com
 ServerName server-01.lab.example.com
 ErrorLog logs/server-01-error.log
 CustomLog logs/server-01-common.log common
 DocumentRoot /vhost
 
 <Directory /vhost>
 Options +Indexes +FollowSymlinks +Includes
 Order allow,deny
 Allow from all
 </Directory>
</VirtualHost>
   
   
Step 2) .
# vim /vhots/index.html 
This is my web server !!



Step 3) Start/Enable http 
 # systemctl start httpd 
  # systemctl enable httpd 

	
	
	
	
	
	
	
	
	
	
	
	OCPlab.example.com
	
	
	
	
	


  
  
  
  
  
 
 
 